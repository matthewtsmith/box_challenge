// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pack.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	pack.proto

It has these top-level messages:
	Box
	Item
	PackRequest
	PackResponse
	PackedBox
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Box struct {
	Id        string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Length    float64 `protobuf:"fixed64,2,opt,name=length" json:"length,omitempty"`
	Width     float64 `protobuf:"fixed64,3,opt,name=width" json:"width,omitempty"`
	Height    float64 `protobuf:"fixed64,4,opt,name=height" json:"height,omitempty"`
	MaxWeight float64 `protobuf:"fixed64,5,opt,name=maxWeight" json:"maxWeight,omitempty"`
}

func (m *Box) Reset()                    { *m = Box{} }
func (m *Box) String() string            { return proto.CompactTextString(m) }
func (*Box) ProtoMessage()               {}
func (*Box) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Box) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Box) GetLength() float64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *Box) GetWidth() float64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Box) GetHeight() float64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Box) GetMaxWeight() float64 {
	if m != nil {
		return m.MaxWeight
	}
	return 0
}

type Item struct {
	Id     string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Length float64 `protobuf:"fixed64,2,opt,name=length" json:"length,omitempty"`
	Width  float64 `protobuf:"fixed64,3,opt,name=width" json:"width,omitempty"`
	Height float64 `protobuf:"fixed64,4,opt,name=height" json:"height,omitempty"`
	Qty    int32   `protobuf:"varint,5,opt,name=qty" json:"qty,omitempty"`
	Weight float64 `protobuf:"fixed64,6,opt,name=weight" json:"weight,omitempty"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Item) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Item) GetLength() float64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *Item) GetWidth() float64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Item) GetHeight() float64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Item) GetQty() int32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

func (m *Item) GetWeight() float64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type PackRequest struct {
	Boxes []*Box  `protobuf:"bytes,1,rep,name=boxes" json:"boxes,omitempty"`
	Items []*Item `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (m *PackRequest) Reset()                    { *m = PackRequest{} }
func (m *PackRequest) String() string            { return proto.CompactTextString(m) }
func (*PackRequest) ProtoMessage()               {}
func (*PackRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PackRequest) GetBoxes() []*Box {
	if m != nil {
		return m.Boxes
	}
	return nil
}

func (m *PackRequest) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type PackResponse struct {
	Boxes []*PackedBox `protobuf:"bytes,1,rep,name=boxes" json:"boxes,omitempty"`
}

func (m *PackResponse) Reset()                    { *m = PackResponse{} }
func (m *PackResponse) String() string            { return proto.CompactTextString(m) }
func (*PackResponse) ProtoMessage()               {}
func (*PackResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PackResponse) GetBoxes() []*PackedBox {
	if m != nil {
		return m.Boxes
	}
	return nil
}

type PackedBox struct {
	Box   *Box    `protobuf:"bytes,1,opt,name=box" json:"box,omitempty"`
	Items []*Item `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (m *PackedBox) Reset()                    { *m = PackedBox{} }
func (m *PackedBox) String() string            { return proto.CompactTextString(m) }
func (*PackedBox) ProtoMessage()               {}
func (*PackedBox) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PackedBox) GetBox() *Box {
	if m != nil {
		return m.Box
	}
	return nil
}

func (m *PackedBox) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*Box)(nil), "main.Box")
	proto.RegisterType((*Item)(nil), "main.Item")
	proto.RegisterType((*PackRequest)(nil), "main.PackRequest")
	proto.RegisterType((*PackResponse)(nil), "main.PackResponse")
	proto.RegisterType((*PackedBox)(nil), "main.PackedBox")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Packer service

type PackerClient interface {
	Pack(ctx context.Context, in *PackRequest, opts ...grpc.CallOption) (*PackResponse, error)
}

type packerClient struct {
	cc *grpc.ClientConn
}

func NewPackerClient(cc *grpc.ClientConn) PackerClient {
	return &packerClient{cc}
}

func (c *packerClient) Pack(ctx context.Context, in *PackRequest, opts ...grpc.CallOption) (*PackResponse, error) {
	out := new(PackResponse)
	err := grpc.Invoke(ctx, "/main.Packer/Pack", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Packer service

type PackerServer interface {
	Pack(context.Context, *PackRequest) (*PackResponse, error)
}

func RegisterPackerServer(s *grpc.Server, srv PackerServer) {
	s.RegisterService(&_Packer_serviceDesc, srv)
}

func _Packer_Pack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackerServer).Pack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Packer/Pack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackerServer).Pack(ctx, req.(*PackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Packer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.Packer",
	HandlerType: (*PackerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Pack",
			Handler:    _Packer_Pack_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pack.proto",
}

func init() { proto.RegisterFile("pack.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 365 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0xcf, 0x4a, 0xeb, 0x40,
	0x14, 0xc6, 0xc9, 0x5f, 0x6e, 0x4e, 0xef, 0xbd, 0xea, 0x28, 0x12, 0x6a, 0xc1, 0x10, 0x10, 0x8a,
	0x8b, 0x04, 0x2b, 0x2e, 0x74, 0x99, 0x9d, 0xe2, 0xa2, 0x64, 0xe3, 0x7a, 0xda, 0x8c, 0xc9, 0xd0,
	0x26, 0x93, 0x26, 0xa3, 0x4d, 0xb7, 0x2e, 0x7c, 0x01, 0xdf, 0xc2, 0xd7, 0xf1, 0x15, 0x7c, 0x10,
	0x99, 0x39, 0xc5, 0x5a, 0x10, 0x5c, 0xb9, 0x9b, 0xf3, 0x9d, 0xdf, 0x7c, 0xdf, 0x99, 0xe1, 0x00,
	0xd4, 0x74, 0x3a, 0x8b, 0xea, 0x46, 0x48, 0x41, 0xec, 0x92, 0xf2, 0xaa, 0x3f, 0xc8, 0x85, 0xc8,
	0xe7, 0x2c, 0xa6, 0x35, 0x8f, 0x69, 0x55, 0x09, 0x49, 0x25, 0x17, 0x55, 0x8b, 0x4c, 0xb8, 0x02,
	0x2b, 0x11, 0x1d, 0xf9, 0x0f, 0x26, 0xcf, 0x7c, 0x23, 0x30, 0x86, 0x5e, 0x6a, 0xf2, 0x8c, 0x1c,
	0x82, 0x3b, 0x67, 0x55, 0x2e, 0x0b, 0xdf, 0x0c, 0x8c, 0xa1, 0x91, 0xae, 0x2b, 0x72, 0x00, 0xce,
	0x92, 0x67, 0xb2, 0xf0, 0x2d, 0x2d, 0x63, 0xa1, 0xe8, 0x82, 0xf1, 0xbc, 0x90, 0xbe, 0x8d, 0x34,
	0x56, 0x64, 0x00, 0x5e, 0x49, 0xbb, 0x3b, 0x6c, 0x39, 0xba, 0xb5, 0x11, 0xc2, 0x67, 0x03, 0xec,
	0x6b, 0xc9, 0xca, 0x5f, 0x0a, 0xdf, 0x05, 0x6b, 0x21, 0x57, 0x3a, 0xd6, 0x49, 0xd5, 0x51, 0x91,
	0x4b, 0x24, 0x5d, 0x24, 0xb1, 0x0a, 0xc7, 0xd0, 0x1b, 0xd3, 0xe9, 0x2c, 0x65, 0x8b, 0x07, 0xd6,
	0x4a, 0x72, 0x0c, 0xce, 0x44, 0x74, 0xac, 0xf5, 0x8d, 0xc0, 0x1a, 0xf6, 0x46, 0x5e, 0xa4, 0xbe,
	0x31, 0x4a, 0x44, 0x97, 0xa2, 0x4e, 0x02, 0x70, 0xb8, 0x64, 0x65, 0xeb, 0x9b, 0x1a, 0x00, 0x04,
	0xd4, 0x53, 0x52, 0x6c, 0x84, 0x17, 0xf0, 0x17, 0x1d, 0xdb, 0x5a, 0x54, 0x2d, 0x23, 0x27, 0xdb,
	0x96, 0x3b, 0x78, 0x43, 0x21, 0x2c, 0xdb, 0x18, 0x87, 0x37, 0xe0, 0x7d, 0x6a, 0xe4, 0x08, 0xac,
	0x89, 0xe8, 0xf4, 0xb7, 0x6c, 0x0d, 0xa1, 0xd4, 0x9f, 0x47, 0x18, 0xdd, 0x82, 0xab, 0xbd, 0x1a,
	0x92, 0x80, 0xad, 0x4e, 0x64, 0x6f, 0x93, 0xba, 0x7e, 0x6a, 0x9f, 0x7c, 0x95, 0x70, 0xd6, 0x70,
	0xff, 0xe9, 0xed, 0xfd, 0xc5, 0xfc, 0x17, 0xfe, 0x89, 0x1f, 0xcf, 0x62, 0xb5, 0x4d, 0x57, 0xc6,
	0x69, 0x72, 0x09, 0xfd, 0xa9, 0x28, 0x23, 0x5a, 0xd7, 0xb2, 0x61, 0xac, 0x15, 0xf7, 0x72, 0x49,
	0x1b, 0x16, 0xd5, 0x3a, 0xe1, 0xd5, 0xfc, 0xb6, 0x89, 0xf1, 0x13, 0x57, 0x2f, 0xda, 0xf9, 0x47,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xac, 0x3b, 0xd8, 0xc6, 0x9a, 0x02, 0x00, 0x00,
}
