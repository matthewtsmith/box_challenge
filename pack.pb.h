// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pack.proto

#ifndef PROTOBUF_pack_2eproto_INCLUDED
#define PROTOBUF_pack_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_pack_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsBoxImpl();
void InitDefaultsBox();
void InitDefaultsItemImpl();
void InitDefaultsItem();
void InitDefaultsPackRequestImpl();
void InitDefaultsPackRequest();
void InitDefaultsPackResponseImpl();
void InitDefaultsPackResponse();
void InitDefaultsPackedBoxImpl();
void InitDefaultsPackedBox();
inline void InitDefaults() {
  InitDefaultsBox();
  InitDefaultsItem();
  InitDefaultsPackRequest();
  InitDefaultsPackResponse();
  InitDefaultsPackedBox();
}
}  // namespace protobuf_pack_2eproto
namespace main {
class Box;
class BoxDefaultTypeInternal;
extern BoxDefaultTypeInternal _Box_default_instance_;
class Item;
class ItemDefaultTypeInternal;
extern ItemDefaultTypeInternal _Item_default_instance_;
class PackRequest;
class PackRequestDefaultTypeInternal;
extern PackRequestDefaultTypeInternal _PackRequest_default_instance_;
class PackResponse;
class PackResponseDefaultTypeInternal;
extern PackResponseDefaultTypeInternal _PackResponse_default_instance_;
class PackedBox;
class PackedBoxDefaultTypeInternal;
extern PackedBoxDefaultTypeInternal _PackedBox_default_instance_;
}  // namespace main
namespace google {
namespace protobuf {
template<> ::main::Box* Arena::Create< ::main::Box>(Arena*);
template<> ::main::Item* Arena::Create< ::main::Item>(Arena*);
template<> ::main::PackRequest* Arena::Create< ::main::PackRequest>(Arena*);
template<> ::main::PackResponse* Arena::Create< ::main::PackResponse>(Arena*);
template<> ::main::PackedBox* Arena::Create< ::main::PackedBox>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace main {

// ===================================================================

class Box : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:main.Box) */ {
 public:
  Box();
  virtual ~Box();

  Box(const Box& from);

  inline Box& operator=(const Box& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Box(Box&& from) noexcept
    : Box() {
    *this = ::std::move(from);
  }

  inline Box& operator=(Box&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Box& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Box* internal_default_instance() {
    return reinterpret_cast<const Box*>(
               &_Box_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Box* other);
  friend void swap(Box& a, Box& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Box* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Box>(NULL);
  }

  Box* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Box>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Box& from);
  void MergeFrom(const Box& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Box* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // double length = 2;
  void clear_length();
  static const int kLengthFieldNumber = 2;
  double length() const;
  void set_length(double value);

  // double width = 3;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  double width() const;
  void set_width(double value);

  // double height = 4;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  double height() const;
  void set_height(double value);

  // double maxWeight = 5;
  void clear_maxweight();
  static const int kMaxWeightFieldNumber = 5;
  double maxweight() const;
  void set_maxweight(double value);

  // @@protoc_insertion_point(class_scope:main.Box)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  double length_;
  double width_;
  double height_;
  double maxweight_;
  mutable int _cached_size_;
  friend struct ::protobuf_pack_2eproto::TableStruct;
  friend void ::protobuf_pack_2eproto::InitDefaultsBoxImpl();
};
// -------------------------------------------------------------------

class Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:main.Item) */ {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Item(Item&& from) noexcept
    : Item() {
    *this = ::std::move(from);
  }

  inline Item& operator=(Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Item* internal_default_instance() {
    return reinterpret_cast<const Item*>(
               &_Item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Item* other);
  friend void swap(Item& a, Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Item* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Item>(NULL);
  }

  Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Item>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // double length = 2;
  void clear_length();
  static const int kLengthFieldNumber = 2;
  double length() const;
  void set_length(double value);

  // double width = 3;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  double width() const;
  void set_width(double value);

  // double height = 4;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  double height() const;
  void set_height(double value);

  // double weight = 6;
  void clear_weight();
  static const int kWeightFieldNumber = 6;
  double weight() const;
  void set_weight(double value);

  // int32 qty = 5;
  void clear_qty();
  static const int kQtyFieldNumber = 5;
  ::google::protobuf::int32 qty() const;
  void set_qty(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.Item)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  double length_;
  double width_;
  double height_;
  double weight_;
  ::google::protobuf::int32 qty_;
  mutable int _cached_size_;
  friend struct ::protobuf_pack_2eproto::TableStruct;
  friend void ::protobuf_pack_2eproto::InitDefaultsItemImpl();
};
// -------------------------------------------------------------------

class PackRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:main.PackRequest) */ {
 public:
  PackRequest();
  virtual ~PackRequest();

  PackRequest(const PackRequest& from);

  inline PackRequest& operator=(const PackRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PackRequest(PackRequest&& from) noexcept
    : PackRequest() {
    *this = ::std::move(from);
  }

  inline PackRequest& operator=(PackRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PackRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackRequest* internal_default_instance() {
    return reinterpret_cast<const PackRequest*>(
               &_PackRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PackRequest* other);
  friend void swap(PackRequest& a, PackRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PackRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PackRequest>(NULL);
  }

  PackRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PackRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PackRequest& from);
  void MergeFrom(const PackRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PackRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .main.Box boxes = 1;
  int boxes_size() const;
  void clear_boxes();
  static const int kBoxesFieldNumber = 1;
  ::main::Box* mutable_boxes(int index);
  ::google::protobuf::RepeatedPtrField< ::main::Box >*
      mutable_boxes();
  const ::main::Box& boxes(int index) const;
  ::main::Box* add_boxes();
  const ::google::protobuf::RepeatedPtrField< ::main::Box >&
      boxes() const;

  // repeated .main.Item items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  ::main::Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::main::Item >*
      mutable_items();
  const ::main::Item& items(int index) const;
  ::main::Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::main::Item >&
      items() const;

  // @@protoc_insertion_point(class_scope:main.PackRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::main::Box > boxes_;
  ::google::protobuf::RepeatedPtrField< ::main::Item > items_;
  mutable int _cached_size_;
  friend struct ::protobuf_pack_2eproto::TableStruct;
  friend void ::protobuf_pack_2eproto::InitDefaultsPackRequestImpl();
};
// -------------------------------------------------------------------

class PackResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:main.PackResponse) */ {
 public:
  PackResponse();
  virtual ~PackResponse();

  PackResponse(const PackResponse& from);

  inline PackResponse& operator=(const PackResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PackResponse(PackResponse&& from) noexcept
    : PackResponse() {
    *this = ::std::move(from);
  }

  inline PackResponse& operator=(PackResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PackResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackResponse* internal_default_instance() {
    return reinterpret_cast<const PackResponse*>(
               &_PackResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PackResponse* other);
  friend void swap(PackResponse& a, PackResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PackResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PackResponse>(NULL);
  }

  PackResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PackResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PackResponse& from);
  void MergeFrom(const PackResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PackResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .main.PackedBox boxes = 1;
  int boxes_size() const;
  void clear_boxes();
  static const int kBoxesFieldNumber = 1;
  ::main::PackedBox* mutable_boxes(int index);
  ::google::protobuf::RepeatedPtrField< ::main::PackedBox >*
      mutable_boxes();
  const ::main::PackedBox& boxes(int index) const;
  ::main::PackedBox* add_boxes();
  const ::google::protobuf::RepeatedPtrField< ::main::PackedBox >&
      boxes() const;

  // @@protoc_insertion_point(class_scope:main.PackResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::main::PackedBox > boxes_;
  mutable int _cached_size_;
  friend struct ::protobuf_pack_2eproto::TableStruct;
  friend void ::protobuf_pack_2eproto::InitDefaultsPackResponseImpl();
};
// -------------------------------------------------------------------

class PackedBox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:main.PackedBox) */ {
 public:
  PackedBox();
  virtual ~PackedBox();

  PackedBox(const PackedBox& from);

  inline PackedBox& operator=(const PackedBox& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PackedBox(PackedBox&& from) noexcept
    : PackedBox() {
    *this = ::std::move(from);
  }

  inline PackedBox& operator=(PackedBox&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PackedBox& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackedBox* internal_default_instance() {
    return reinterpret_cast<const PackedBox*>(
               &_PackedBox_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PackedBox* other);
  friend void swap(PackedBox& a, PackedBox& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PackedBox* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PackedBox>(NULL);
  }

  PackedBox* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PackedBox>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PackedBox& from);
  void MergeFrom(const PackedBox& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PackedBox* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .main.Item items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  ::main::Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::main::Item >*
      mutable_items();
  const ::main::Item& items(int index) const;
  ::main::Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::main::Item >&
      items() const;

  // .main.Box box = 1;
  bool has_box() const;
  void clear_box();
  static const int kBoxFieldNumber = 1;
  const ::main::Box& box() const;
  ::main::Box* release_box();
  ::main::Box* mutable_box();
  void set_allocated_box(::main::Box* box);

  // @@protoc_insertion_point(class_scope:main.PackedBox)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::main::Item > items_;
  ::main::Box* box_;
  mutable int _cached_size_;
  friend struct ::protobuf_pack_2eproto::TableStruct;
  friend void ::protobuf_pack_2eproto::InitDefaultsPackedBoxImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Box

// string id = 1;
inline void Box::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Box::id() const {
  // @@protoc_insertion_point(field_get:main.Box.id)
  return id_.GetNoArena();
}
inline void Box::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.Box.id)
}
#if LANG_CXX11
inline void Box::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:main.Box.id)
}
#endif
inline void Box::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.Box.id)
}
inline void Box::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.Box.id)
}
inline ::std::string* Box::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:main.Box.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Box::release_id() {
  // @@protoc_insertion_point(field_release:main.Box.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Box::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:main.Box.id)
}

// double length = 2;
inline void Box::clear_length() {
  length_ = 0;
}
inline double Box::length() const {
  // @@protoc_insertion_point(field_get:main.Box.length)
  return length_;
}
inline void Box::set_length(double value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:main.Box.length)
}

// double width = 3;
inline void Box::clear_width() {
  width_ = 0;
}
inline double Box::width() const {
  // @@protoc_insertion_point(field_get:main.Box.width)
  return width_;
}
inline void Box::set_width(double value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:main.Box.width)
}

// double height = 4;
inline void Box::clear_height() {
  height_ = 0;
}
inline double Box::height() const {
  // @@protoc_insertion_point(field_get:main.Box.height)
  return height_;
}
inline void Box::set_height(double value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:main.Box.height)
}

// double maxWeight = 5;
inline void Box::clear_maxweight() {
  maxweight_ = 0;
}
inline double Box::maxweight() const {
  // @@protoc_insertion_point(field_get:main.Box.maxWeight)
  return maxweight_;
}
inline void Box::set_maxweight(double value) {
  
  maxweight_ = value;
  // @@protoc_insertion_point(field_set:main.Box.maxWeight)
}

// -------------------------------------------------------------------

// Item

// string id = 1;
inline void Item::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Item::id() const {
  // @@protoc_insertion_point(field_get:main.Item.id)
  return id_.GetNoArena();
}
inline void Item::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.Item.id)
}
#if LANG_CXX11
inline void Item::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:main.Item.id)
}
#endif
inline void Item::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.Item.id)
}
inline void Item::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.Item.id)
}
inline ::std::string* Item::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:main.Item.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Item::release_id() {
  // @@protoc_insertion_point(field_release:main.Item.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Item::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:main.Item.id)
}

// double length = 2;
inline void Item::clear_length() {
  length_ = 0;
}
inline double Item::length() const {
  // @@protoc_insertion_point(field_get:main.Item.length)
  return length_;
}
inline void Item::set_length(double value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:main.Item.length)
}

// double width = 3;
inline void Item::clear_width() {
  width_ = 0;
}
inline double Item::width() const {
  // @@protoc_insertion_point(field_get:main.Item.width)
  return width_;
}
inline void Item::set_width(double value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:main.Item.width)
}

// double height = 4;
inline void Item::clear_height() {
  height_ = 0;
}
inline double Item::height() const {
  // @@protoc_insertion_point(field_get:main.Item.height)
  return height_;
}
inline void Item::set_height(double value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:main.Item.height)
}

// int32 qty = 5;
inline void Item::clear_qty() {
  qty_ = 0;
}
inline ::google::protobuf::int32 Item::qty() const {
  // @@protoc_insertion_point(field_get:main.Item.qty)
  return qty_;
}
inline void Item::set_qty(::google::protobuf::int32 value) {
  
  qty_ = value;
  // @@protoc_insertion_point(field_set:main.Item.qty)
}

// double weight = 6;
inline void Item::clear_weight() {
  weight_ = 0;
}
inline double Item::weight() const {
  // @@protoc_insertion_point(field_get:main.Item.weight)
  return weight_;
}
inline void Item::set_weight(double value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:main.Item.weight)
}

// -------------------------------------------------------------------

// PackRequest

// repeated .main.Box boxes = 1;
inline int PackRequest::boxes_size() const {
  return boxes_.size();
}
inline void PackRequest::clear_boxes() {
  boxes_.Clear();
}
inline ::main::Box* PackRequest::mutable_boxes(int index) {
  // @@protoc_insertion_point(field_mutable:main.PackRequest.boxes)
  return boxes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::main::Box >*
PackRequest::mutable_boxes() {
  // @@protoc_insertion_point(field_mutable_list:main.PackRequest.boxes)
  return &boxes_;
}
inline const ::main::Box& PackRequest::boxes(int index) const {
  // @@protoc_insertion_point(field_get:main.PackRequest.boxes)
  return boxes_.Get(index);
}
inline ::main::Box* PackRequest::add_boxes() {
  // @@protoc_insertion_point(field_add:main.PackRequest.boxes)
  return boxes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::Box >&
PackRequest::boxes() const {
  // @@protoc_insertion_point(field_list:main.PackRequest.boxes)
  return boxes_;
}

// repeated .main.Item items = 2;
inline int PackRequest::items_size() const {
  return items_.size();
}
inline void PackRequest::clear_items() {
  items_.Clear();
}
inline ::main::Item* PackRequest::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:main.PackRequest.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::main::Item >*
PackRequest::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:main.PackRequest.items)
  return &items_;
}
inline const ::main::Item& PackRequest::items(int index) const {
  // @@protoc_insertion_point(field_get:main.PackRequest.items)
  return items_.Get(index);
}
inline ::main::Item* PackRequest::add_items() {
  // @@protoc_insertion_point(field_add:main.PackRequest.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::Item >&
PackRequest::items() const {
  // @@protoc_insertion_point(field_list:main.PackRequest.items)
  return items_;
}

// -------------------------------------------------------------------

// PackResponse

// repeated .main.PackedBox boxes = 1;
inline int PackResponse::boxes_size() const {
  return boxes_.size();
}
inline void PackResponse::clear_boxes() {
  boxes_.Clear();
}
inline ::main::PackedBox* PackResponse::mutable_boxes(int index) {
  // @@protoc_insertion_point(field_mutable:main.PackResponse.boxes)
  return boxes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::main::PackedBox >*
PackResponse::mutable_boxes() {
  // @@protoc_insertion_point(field_mutable_list:main.PackResponse.boxes)
  return &boxes_;
}
inline const ::main::PackedBox& PackResponse::boxes(int index) const {
  // @@protoc_insertion_point(field_get:main.PackResponse.boxes)
  return boxes_.Get(index);
}
inline ::main::PackedBox* PackResponse::add_boxes() {
  // @@protoc_insertion_point(field_add:main.PackResponse.boxes)
  return boxes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::PackedBox >&
PackResponse::boxes() const {
  // @@protoc_insertion_point(field_list:main.PackResponse.boxes)
  return boxes_;
}

// -------------------------------------------------------------------

// PackedBox

// .main.Box box = 1;
inline bool PackedBox::has_box() const {
  return this != internal_default_instance() && box_ != NULL;
}
inline void PackedBox::clear_box() {
  if (GetArenaNoVirtual() == NULL && box_ != NULL) {
    delete box_;
  }
  box_ = NULL;
}
inline const ::main::Box& PackedBox::box() const {
  const ::main::Box* p = box_;
  // @@protoc_insertion_point(field_get:main.PackedBox.box)
  return p != NULL ? *p : *reinterpret_cast<const ::main::Box*>(
      &::main::_Box_default_instance_);
}
inline ::main::Box* PackedBox::release_box() {
  // @@protoc_insertion_point(field_release:main.PackedBox.box)
  
  ::main::Box* temp = box_;
  box_ = NULL;
  return temp;
}
inline ::main::Box* PackedBox::mutable_box() {
  
  if (box_ == NULL) {
    box_ = ::google::protobuf::Arena::Create< ::main::Box >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:main.PackedBox.box)
  return box_;
}
inline void PackedBox::set_allocated_box(::main::Box* box) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete box_;
  }
  if (box) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      box = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, box, submessage_arena);
    }
    
  } else {
    
  }
  box_ = box;
  // @@protoc_insertion_point(field_set_allocated:main.PackedBox.box)
}

// repeated .main.Item items = 2;
inline int PackedBox::items_size() const {
  return items_.size();
}
inline void PackedBox::clear_items() {
  items_.Clear();
}
inline ::main::Item* PackedBox::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:main.PackedBox.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::main::Item >*
PackedBox::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:main.PackedBox.items)
  return &items_;
}
inline const ::main::Item& PackedBox::items(int index) const {
  // @@protoc_insertion_point(field_get:main.PackedBox.items)
  return items_.Get(index);
}
inline ::main::Item* PackedBox::add_items() {
  // @@protoc_insertion_point(field_add:main.PackedBox.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::Item >&
PackedBox::items() const {
  // @@protoc_insertion_point(field_list:main.PackedBox.items)
  return items_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace main

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pack_2eproto_INCLUDED
